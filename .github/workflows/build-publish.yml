name: Publish Docker

on:
    push:
    schedule:
    # every sunday night
    - cron: '0 0 * * 0'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  publish:
    runs-on: ubuntu-latest

    name: Build and Publish Docker Image

    env:
      image-platforms: linux/amd64

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get Timestamp for tag
        id: get-timestamp
        run: |
          TIMESTAMP=$(date +%s)
          echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
          echo $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/okaufmann/mydump-s3
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value={{branch}}-${{ steps.get-timestamp.outputs.timestamp }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Push Image to Github Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          target: final
          platforms: ${{ env.image-platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}
            GITHUB_REF_NAME=${{ github.ref_name }}
            IMAGE_TAG=${{ github.ref_name }}-${{ steps.get-timestamp.outputs.timestamp }}
